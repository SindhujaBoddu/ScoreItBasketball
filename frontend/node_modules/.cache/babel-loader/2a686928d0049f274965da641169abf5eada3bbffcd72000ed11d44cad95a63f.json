{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sindh\\\\Desktop\\\\basketball-tournament-app\\\\frontend\\\\src\\\\components\\\\playoffs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n//import \"../styles/Playoffs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playoffs() {\n  _s();\n  const {\n    tournamentId\n  } = useParams();\n  const navigate = useNavigate();\n  const [topTeams, setTopTeams] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [playoffStage, setPlayoffStage] = useState(0);\n  const [homeTeam, setHomeTeam] = useState(\"\");\n  const [awayTeam, setAwayTeam] = useState(\"\");\n  const [matchDate, setMatchDate] = useState(\"\");\n  const [matchTime, setMatchTime] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      await fetchTopTeams();\n      await fetchMatches();\n      await fetchPlayoffStage();\n    }\n    fetchData();\n  }, [tournamentId]);\n  const fetchTopTeams = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/points-table`);\n      if (!response.ok) throw new Error(\"Failed to fetch points table\");\n      const data = await response.json();\n      console.log(\"🎯 Full Points Table Fetched:\", data);\n      if (Array.isArray(data) && data.length > 0) {\n        // Determine the number of teams to display based on the playoff stage\n        let topCount = 4;\n        const playoffMatchesResponse = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/matches`);\n        const matches = await playoffMatchesResponse.json();\n        const semiFinal1 = matches.find(match => match.round === \"Semifinal-1\" && match.status === \"completed\");\n        const semiFinal2 = matches.find(match => match.round === \"Semifinal-2\" && match.status === \"completed\");\n        if (semiFinal1) topCount = 3; // After Semifinal-1, show top 3 teams\n        if (semiFinal2) topCount = 2;\n        // Sort the teams by wins, then by point difference\n        const sortedData = data.sort((a, b) => b.wins - a.wins ||\n        // Sort by wins first\n        b.point_difference - a.point_difference // If wins are equal, sort by point difference\n        ).slice(0, topCount) // Select the required number of teams\n        .map((team, index) => ({\n          rank: index + 1,\n          name: team.name || team.team_name,\n          points: team.wins // Ensure 'points' field is correctly assigned\n        }));\n        console.log(`🏆 Top ${topCount} Teams:`, sortedData);\n        setTopTeams(sortedData);\n      } else {\n        console.log(\"❌ No teams available for ranking.\");\n        setTopTeams([]);\n      }\n    } catch (error) {\n      console.error(\"❌ Error fetching points table:\", error);\n    }\n  };\n  const fetchMatches = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/matches`);\n      const data = await response.json();\n      const playoffMatches = data.filter(match => match.round.includes('Semifinal') || match.round.includes('Final'));\n      setMatches(playoffMatches); // ✅ Store the fetched playoff matches\n\n      // ✅ Dynamically update `topTeams` based on match completion\n      fetchTopTeams();\n    } catch (error) {\n      console.error(\"Error fetching playoff matches:\", error);\n    }\n  };\n  const fetchPlayoffStage = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/playoff-stage`);\n      const data = await response.json();\n      setPlayoffStage(data.stage);\n    } catch (error) {\n      console.error(\"Error fetching playoff stage:\", error);\n    }\n  };\n  const updatePlayoffStage = async newStage => {\n    try {\n      await fetch(`http://localhost:5000/api/tournament/${tournamentId}/update-playoff-stage`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          stage: newStage\n        })\n      });\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error updating playoff stage:\", error);\n    }\n  };\n  const handleScheduleMatch = async () => {\n    if (!homeTeam || !awayTeam || homeTeam === awayTeam) {\n      alert(\"Please select two different teams.\");\n      return;\n    }\n    if (!matchDate || !matchTime) {\n      alert(\"Please select a valid date and time.\");\n      return;\n    }\n    let roundName = playoffStage === 0 ? \"Semifinal-1\" : playoffStage === 1 ? \"Semifinal-2\" : \"Final\";\n    try {\n      const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/schedule-manual-playoff`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          home_team: homeTeam,\n          away_team: awayTeam,\n          round: roundName,\n          match_datetime: `${matchDate}T${matchTime}`\n        })\n      });\n      if (response.ok) {\n        alert(\"Match scheduled successfully!\");\n      } else {\n        alert(\"Failed to schedule match.\");\n      }\n    } catch (error) {\n      console.error(\"Error scheduling match:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playoffs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: topTeams.length === 4 ? \"🔥 Top 4 Playoff Teams\" : topTeams.length === 3 ? \"🏆 Final Standings - Top 3 Teams\" : \"🏆 Final Match - Top 2 Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topTeams.length > 0 ? topTeams.map((team, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [team.rank, \". \", team.name ? team.name : \"missing\", \" - \", team.points, \" Points\"]\n      }, team.rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No teams available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Schedule a Playoff Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: homeTeam,\n      onChange: e => setHomeTeam(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Home Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), topTeams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: team.name,\n        children: team.name\n      }, team.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: awayTeam,\n      onChange: e => setAwayTeam(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Away Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), topTeams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: team.name,\n        children: team.name\n      }, team.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: matchDate,\n      onChange: e => setMatchDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: matchTime,\n      onChange: e => setMatchTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScheduleMatch,\n      children: \"Schedule Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Playoff Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), matches.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [match.home_team, \" vs \", match.away_team]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Round: \", match.round]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", new Date(match.time).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", match.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(`/live-match/${match.id}`),\n        children: \"Start Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, match.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n_s(Playoffs, \"frAmruB0IayFLbZwpklESGu4vxo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Playoffs;\nexport default Playoffs;\nvar _c;\n$RefreshReg$(_c, \"Playoffs\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Playoffs","_s","tournamentId","navigate","topTeams","setTopTeams","matches","setMatches","playoffStage","setPlayoffStage","homeTeam","setHomeTeam","awayTeam","setAwayTeam","matchDate","setMatchDate","matchTime","setMatchTime","fetchData","fetchTopTeams","fetchMatches","fetchPlayoffStage","response","fetch","ok","Error","data","json","console","log","Array","isArray","length","topCount","playoffMatchesResponse","semiFinal1","find","match","round","status","semiFinal2","sortedData","sort","a","b","wins","point_difference","slice","map","team","index","rank","name","team_name","points","error","playoffMatches","filter","includes","stage","updatePlayoffStage","newStage","method","headers","body","JSON","stringify","window","location","reload","handleScheduleMatch","alert","roundName","home_team","away_team","match_datetime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","Date","time","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/sindh/Desktop/basketball-tournament-app/frontend/src/components/playoffs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n//import \"../styles/Playoffs.css\";\r\n\r\nfunction Playoffs() {\r\n    const { tournamentId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [topTeams, setTopTeams] = useState([]);\r\n    const [matches, setMatches] = useState([]);\r\n    const [playoffStage, setPlayoffStage] = useState(0);\r\n    const [homeTeam, setHomeTeam] = useState(\"\");\r\n    const [awayTeam, setAwayTeam] = useState(\"\");\r\n    const [matchDate, setMatchDate] = useState(\"\");\r\n    const [matchTime, setMatchTime] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await fetchTopTeams();\r\n            await fetchMatches();\r\n            await fetchPlayoffStage();\r\n        }\r\n        fetchData();\r\n    }, [tournamentId]);\r\n\r\n    const fetchTopTeams = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/points-table`);\r\n            if (!response.ok) throw new Error(\"Failed to fetch points table\");\r\n    \r\n            const data = await response.json();\r\n            console.log(\"🎯 Full Points Table Fetched:\", data);\r\n    \r\n            if (Array.isArray(data) && data.length > 0) {\r\n                // Determine the number of teams to display based on the playoff stage\r\n                let topCount = 4;\r\n                const playoffMatchesResponse = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/matches`);\r\n            const matches = await playoffMatchesResponse.json();\r\n\r\n            const semiFinal1 = matches.find(match => match.round === \"Semifinal-1\" && match.status === \"completed\");\r\n            const semiFinal2 = matches.find(match => match.round === \"Semifinal-2\" && match.status === \"completed\");\r\n\r\n            if (semiFinal1) topCount = 3; // After Semifinal-1, show top 3 teams\r\n            if (semiFinal2) topCount = 2;\r\n                // Sort the teams by wins, then by point difference\r\n                const sortedData = data\r\n                    .sort((a, b) => \r\n                        b.wins - a.wins ||  // Sort by wins first\r\n                        b.point_difference - a.point_difference  // If wins are equal, sort by point difference\r\n                    )\r\n                    .slice(0, topCount)  // Select the required number of teams\r\n                    .map((team, index) => ({ \r\n                        rank: index + 1, \r\n                        name:team.name||team.team_name, \r\n                        points: team.wins // Ensure 'points' field is correctly assigned\r\n                    }));\r\n    \r\n                console.log(`🏆 Top ${topCount} Teams:`, sortedData);\r\n                setTopTeams(sortedData);\r\n            } else {\r\n                console.log(\"❌ No teams available for ranking.\");\r\n                setTopTeams([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching points table:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    \r\n\r\n    const fetchMatches = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/matches`);\r\n            const data = await response.json();\r\n            const playoffMatches = data.filter(match => match.round.includes('Semifinal') || match.round.includes('Final'));\r\n    \r\n            setMatches(playoffMatches); // ✅ Store the fetched playoff matches\r\n    \r\n            // ✅ Dynamically update `topTeams` based on match completion\r\n            fetchTopTeams();\r\n        } catch (error) {\r\n            console.error(\"Error fetching playoff matches:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    const fetchPlayoffStage = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/playoff-stage`);\r\n            const data = await response.json();\r\n            setPlayoffStage(data.stage);\r\n        } catch (error) {\r\n            console.error(\"Error fetching playoff stage:\", error);\r\n        }\r\n    };\r\n    \r\n    const updatePlayoffStage = async (newStage) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/api/tournament/${tournamentId}/update-playoff-stage`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ stage: newStage })\r\n            });\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error(\"Error updating playoff stage:\", error);\r\n        }\r\n    };\r\n    \r\n    const handleScheduleMatch = async () => {\r\n        if (!homeTeam || !awayTeam || homeTeam === awayTeam) {\r\n            alert(\"Please select two different teams.\");\r\n            return;\r\n        }\r\n        if (!matchDate || !matchTime) {\r\n            alert(\"Please select a valid date and time.\");\r\n            return;\r\n        }\r\n    \r\n        let roundName = playoffStage === 0 ? \"Semifinal-1\" : playoffStage === 1 ? \"Semifinal-2\" : \"Final\";\r\n    \r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/tournament/${tournamentId}/schedule-manual-playoff`, {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    home_team: homeTeam,\r\n                    away_team: awayTeam,\r\n                    round: roundName,\r\n                    match_datetime: `${matchDate}T${matchTime}`\r\n                })\r\n            });\r\n    \r\n            if (response.ok) {\r\n                alert(\"Match scheduled successfully!\");\r\n            } else {\r\n                alert(\"Failed to schedule match.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error scheduling match:\", error);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Playoffs</h2>\r\n\r\n            <h3>\r\n    {topTeams.length === 4 \r\n        ? \"🔥 Top 4 Playoff Teams\" \r\n        : topTeams.length === 3 \r\n        ? \"🏆 Final Standings - Top 3 Teams\" \r\n        : \"🏆 Final Match - Top 2 Teams\"}\r\n</h3>\r\n\r\n\r\n<ul>\r\n    {topTeams.length > 0 ? (\r\n        topTeams.map((team, index) => (\r\n            <li key={team.rank}>\r\n                {team.rank}. {team.name?team.name:\"missing\"} - {team.points} Points\r\n            </li>\r\n        ))\r\n    ) : (\r\n        <li>No teams available</li>\r\n    )}\r\n</ul>\r\n\r\n\r\n\r\n\r\n            <h3>Schedule a Playoff Match</h3>\r\n            <select value={homeTeam} onChange={(e) => setHomeTeam(e.target.value)}>\r\n                <option value=\"\">Select Home Team</option>\r\n                {topTeams.map(team => (\r\n                    <option key={team.name} value={team.name}>{team.name}</option>\r\n                ))}\r\n            </select>\r\n            <select value={awayTeam} onChange={(e) => setAwayTeam(e.target.value)}>\r\n                <option value=\"\">Select Away Team</option>\r\n                {topTeams.map(team => (\r\n                    <option key={team.name} value={team.name}>{team.name}</option>\r\n                ))}\r\n            </select>\r\n            <input type=\"date\" value={matchDate} onChange={(e) => setMatchDate(e.target.value)} />\r\n            <input type=\"time\" value={matchTime} onChange={(e) => setMatchTime(e.target.value)} />\r\n            <button onClick={handleScheduleMatch}>Schedule Match</button>\r\n\r\n            <h3>Playoff Matches</h3>\r\n            {matches.map(match => (\r\n                <div key={match.id} className=\"match-card\">\r\n                    <h3>{match.home_team} vs {match.away_team}</h3>\r\n                    <p>Round: {match.round}</p>\r\n                    <p>Date: {new Date(match.time).toLocaleString()}</p>\r\n                    <p>Status: {match.status}</p>\r\n                    <button onClick={() => navigate(`/live-match/${match.id}`)}>Start Match</button>\r\n                </div>\r\n            ))}\r\n\r\n            <button onClick={() => navigate(-1)}>Back</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Playoffs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAa,CAAC,GAAGN,SAAS,CAAC,CAAC;EACpC,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,eAAeuB,SAASA,CAAA,EAAG;MACvB,MAAMC,aAAa,CAAC,CAAC;MACrB,MAAMC,YAAY,CAAC,CAAC;MACpB,MAAMC,iBAAiB,CAAC,CAAC;IAC7B;IACAH,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAChB,YAAY,CAAC,CAAC;EAElB,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCrB,YAAY,eAAe,CAAC;MACjG,IAAI,CAACoB,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MAEjE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,IAAI,CAAC;MAElD,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,IAAIA,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;QACxC;QACA,IAAIC,QAAQ,GAAG,CAAC;QAChB,MAAMC,sBAAsB,GAAG,MAAMX,KAAK,CAAC,wCAAwCrB,YAAY,UAAU,CAAC;QAC9G,MAAMI,OAAO,GAAG,MAAM4B,sBAAsB,CAACP,IAAI,CAAC,CAAC;QAEnD,MAAMQ,UAAU,GAAG7B,OAAO,CAAC8B,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,aAAa,IAAID,KAAK,CAACE,MAAM,KAAK,WAAW,CAAC;QACvG,MAAMC,UAAU,GAAGlC,OAAO,CAAC8B,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,KAAK,aAAa,IAAID,KAAK,CAACE,MAAM,KAAK,WAAW,CAAC;QAEvG,IAAIJ,UAAU,EAAEF,QAAQ,GAAG,CAAC,CAAC,CAAC;QAC9B,IAAIO,UAAU,EAAEP,QAAQ,GAAG,CAAC;QACxB;QACA,MAAMQ,UAAU,GAAGf,IAAI,CAClBgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACPA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI;QAAK;QACpBD,CAAC,CAACE,gBAAgB,GAAGH,CAAC,CAACG,gBAAgB,CAAE;QAC7C,CAAC,CACAC,KAAK,CAAC,CAAC,EAAEd,QAAQ,CAAC,CAAE;QAAA,CACpBe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;UACnBC,IAAI,EAAED,KAAK,GAAG,CAAC;UACfE,IAAI,EAACH,IAAI,CAACG,IAAI,IAAEH,IAAI,CAACI,SAAS;UAC9BC,MAAM,EAAEL,IAAI,CAACJ,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QAEPjB,OAAO,CAACC,GAAG,CAAC,UAAUI,QAAQ,SAAS,EAAEQ,UAAU,CAAC;QACpDpC,WAAW,CAACoC,UAAU,CAAC;MAC3B,CAAC,MAAM;QACHb,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChDxB,WAAW,CAAC,EAAE,CAAC;MACnB;IACJ,CAAC,CAAC,OAAOkD,KAAK,EAAE;MACZ3B,OAAO,CAAC2B,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAMD,MAAMnC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCrB,YAAY,UAAU,CAAC;MAC5F,MAAMwB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAM6B,cAAc,GAAG9B,IAAI,CAAC+B,MAAM,CAACpB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACoB,QAAQ,CAAC,WAAW,CAAC,IAAIrB,KAAK,CAACC,KAAK,CAACoB,QAAQ,CAAC,OAAO,CAAC,CAAC;MAE/GnD,UAAU,CAACiD,cAAc,CAAC,CAAC,CAAC;;MAE5B;MACArC,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACZ3B,OAAO,CAAC2B,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAKD,MAAMlC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCrB,YAAY,gBAAgB,CAAC;MAClG,MAAMwB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClClB,eAAe,CAACiB,IAAI,CAACiC,KAAK,CAAC;IAC/B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZ3B,OAAO,CAAC2B,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAMK,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACA,MAAMtC,KAAK,CAAC,wCAAwCrB,YAAY,uBAAuB,EAAE;QACrF4D,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,KAAK,EAAEE;QAAS,CAAC;MAC5C,CAAC,CAAC;MACFM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZ3B,OAAO,CAAC2B,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC5D,QAAQ,IAAI,CAACE,QAAQ,IAAIF,QAAQ,KAAKE,QAAQ,EAAE;MACjD2D,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACJ;IACA,IAAI,CAACzD,SAAS,IAAI,CAACE,SAAS,EAAE;MAC1BuD,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IAEA,IAAIC,SAAS,GAAGhE,YAAY,KAAK,CAAC,GAAG,aAAa,GAAGA,YAAY,KAAK,CAAC,GAAG,aAAa,GAAG,OAAO;IAEjG,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCrB,YAAY,0BAA0B,EAAE;QACzG4D,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBO,SAAS,EAAE/D,QAAQ;UACnBgE,SAAS,EAAE9D,QAAQ;UACnB0B,KAAK,EAAEkC,SAAS;UAChBG,cAAc,EAAE,GAAG7D,SAAS,IAAIE,SAAS;QAC7C,CAAC;MACL,CAAC,CAAC;MAEF,IAAIM,QAAQ,CAACE,EAAE,EAAE;QACb+C,KAAK,CAAC,+BAA+B,CAAC;MAC1C,CAAC,MAAM;QACHA,KAAK,CAAC,2BAA2B,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZ3B,OAAO,CAAC2B,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,oBACIxD,OAAA;IAAK6E,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB9E,OAAA;MAAA8E,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjBlF,OAAA;MAAA8E,QAAA,EACPzE,QAAQ,CAAC4B,MAAM,KAAK,CAAC,GAChB,wBAAwB,GACxB5B,QAAQ,CAAC4B,MAAM,KAAK,CAAC,GACrB,kCAAkC,GAClC;IAA8B;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGLlF,OAAA;MAAA8E,QAAA,EACKzE,QAAQ,CAAC4B,MAAM,GAAG,CAAC,GAChB5B,QAAQ,CAAC4C,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBnD,OAAA;QAAA8E,QAAA,GACK5B,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,IAAI,GAACH,IAAI,CAACG,IAAI,GAAC,SAAS,EAAC,KAAG,EAACH,IAAI,CAACK,MAAM,EAAC,SAChE;MAAA,GAFSL,IAAI,CAACE,IAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACP,CAAC,gBAEFlF,OAAA;QAAA8E,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAKOlF,OAAA;MAAA8E,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClF,OAAA;MAAQmF,KAAK,EAAExE,QAAS;MAACyE,QAAQ,EAAGC,CAAC,IAAKzE,WAAW,CAACyE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAClE9E,OAAA;QAAQmF,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzC7E,QAAQ,CAAC4C,GAAG,CAACC,IAAI,iBACdlD,OAAA;QAAwBmF,KAAK,EAAEjC,IAAI,CAACG,IAAK;QAAAyB,QAAA,EAAE5B,IAAI,CAACG;MAAI,GAAvCH,IAAI,CAACG,IAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTlF,OAAA;MAAQmF,KAAK,EAAEtE,QAAS;MAACuE,QAAQ,EAAGC,CAAC,IAAKvE,WAAW,CAACuE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAL,QAAA,gBAClE9E,OAAA;QAAQmF,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzC7E,QAAQ,CAAC4C,GAAG,CAACC,IAAI,iBACdlD,OAAA;QAAwBmF,KAAK,EAAEjC,IAAI,CAACG,IAAK;QAAAyB,QAAA,EAAE5B,IAAI,CAACG;MAAI,GAAvCH,IAAI,CAACG,IAAI;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTlF,OAAA;MAAOuF,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAEpE,SAAU;MAACqE,QAAQ,EAAGC,CAAC,IAAKrE,YAAY,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFlF,OAAA;MAAOuF,IAAI,EAAC,MAAM;MAACJ,KAAK,EAAElE,SAAU;MAACmE,QAAQ,EAAGC,CAAC,IAAKnE,YAAY,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFlF,OAAA;MAAQwF,OAAO,EAAEjB,mBAAoB;MAAAO,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7DlF,OAAA;MAAA8E,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvB3E,OAAO,CAAC0C,GAAG,CAACX,KAAK,iBACdtC,OAAA;MAAoB6E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACtC9E,OAAA;QAAA8E,QAAA,GAAKxC,KAAK,CAACoC,SAAS,EAAC,MAAI,EAACpC,KAAK,CAACqC,SAAS;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/ClF,OAAA;QAAA8E,QAAA,GAAG,SAAO,EAACxC,KAAK,CAACC,KAAK;MAAA;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BlF,OAAA;QAAA8E,QAAA,GAAG,QAAM,EAAC,IAAIW,IAAI,CAACnD,KAAK,CAACoD,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDlF,OAAA;QAAA8E,QAAA,GAAG,UAAQ,EAACxC,KAAK,CAACE,MAAM;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BlF,OAAA;QAAQwF,OAAO,EAAEA,CAAA,KAAMpF,QAAQ,CAAC,eAAekC,KAAK,CAACsD,EAAE,EAAE,CAAE;QAAAd,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAL1E5C,KAAK,CAACsD,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACR,CAAC,eAEFlF,OAAA;MAAQwF,OAAO,EAAEA,CAAA,KAAMpF,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA0E,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAChF,EAAA,CAzMQD,QAAQ;EAAA,QACYJ,SAAS,EACjBC,WAAW;AAAA;AAAA+F,EAAA,GAFvB5F,QAAQ;AA2MjB,eAAeA,QAAQ;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}