{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sindh\\\\Desktop\\\\basketball-tournament-app\\\\frontend\\\\src\\\\components\\\\ViewTournament.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport \"../styles/ViewTournament.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewTournament() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [tournament, setTournament] = useState(null);\n  const [matches, setMatches] = useState([]);\n  const [playoffMatches, setPlayoffMatches] = useState([]);\n  const [pointsTable, setPointsTable] = useState([]);\n  const [playoffStage, setPlayoffStage] = useState(0);\n  const [allMatchesCompleted, setAllMatchesCompleted] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      await fetchTournamentDetails();\n      await fetchMatches();\n      await fetchPointsTable();\n      await fetchPlayoffStage();\n    }\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    if (matches.length > 0) {\n      const allNormalCompleted = matches.every(match => match.status === \"completed\");\n      setAllMatchesCompleted(allNormalCompleted);\n    }\n  }, [matches]);\n  useEffect(() => {\n    console.log(\"Updated All Matches Completed:\", allMatchesCompleted);\n  }, [allMatchesCompleted]);\n  const fetchTournamentDetails = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/tournament/${id}`);\n      const data = await res.json();\n      if (data !== null && data !== void 0 && data.id) {\n        setTournament(data);\n      }\n    } catch (error) {\n      console.error('Error fetching tournament details:', error);\n    }\n  };\n  useEffect(() => {\n    async function fetchPlayoffMatches() {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tournament/${id}/playoff-matches`);\n        if (!response.ok) throw new Error(\"Failed to fetch playoff matches\");\n        const data = await response.json();\n        setPlayoffMatches(data);\n      } catch (error) {\n        console.error(\"Error fetching playoff matches:\", error);\n      }\n    }\n    fetchPlayoffMatches();\n  }, [id]);\n  const fetchMatches = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/tournament/${id}/matches`);\n      const data = await res.json();\n      if (!Array.isArray(data)) return;\n\n      // 🏀 Separate Normal Matches & Playoffs\n      const normalMatches = data.filter(match => !match.round.includes(\"Semifinal\") && !match.round.includes(\"Final\"));\n      let playoffMatches = data.filter(match => match.round.includes(\"Semifinal\") || match.round.includes(\"Final\"));\n\n      // 🏀 Ensure Correct Semifinal-1 (2 Matches) & Semifinal-2 (1 Match)\n      let semifinal1Matches = playoffMatches.filter(match => match.round === \"Semifinal-1\");\n      let semifinal2Match = playoffMatches.find(match => match.round === \"Semifinal-2\");\n      let finalMatch = playoffMatches.find(match => match.round.includes(\"Final\")) || null;\n      const structuredPlayoffMatches = [...semifinal1Matches, semifinal2Match, finalMatch].filter(Boolean);\n      setMatches(normalMatches);\n      setPlayoffMatches(structuredPlayoffMatches);\n\n      // ✅ Check if all normal matches are completed\n      const allNormalCompleted = normalMatches.length > 0 && normalMatches.every(match => match.status === \"completed\");\n      setAllMatchesCompleted(allNormalCompleted);\n\n      // ✅ Determine Playoff Stage\n      if (finalMatch && finalMatch.status === \"completed\") {\n        setPlayoffStage(3); // Playoffs completed\n      } else if (semifinal1Matches.length === 2 && semifinal1Matches.every(match => match.status === \"completed\") && semifinal2Match && semifinal2Match.status === \"completed\") {\n        setPlayoffStage(2); // Ready for Final\n      } else if (semifinal1Matches.length === 2 && semifinal1Matches.every(match => match.status === \"completed\")) {\n        setPlayoffStage(1); // Ready for Semifinal-2\n      } else {\n        setPlayoffStage(0); // Start with Semifinal-1\n      }\n      fetchPointsTable();\n    } catch (error) {\n      console.error('Error fetching matches:', error);\n    }\n  };\n  const fetchPointsTable = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/tournament/${id}/points-table`);\n      const data = await res.json();\n      if (Array.isArray(data) && data.length > 0) {\n        const sortedData = data.sort((a, b) => b.points - a.points || b.point_difference - a.point_difference);\n        setPointsTable(sortedData);\n      } else {\n        setPointsTable([]); // Ensure an empty array if no data\n      }\n    } catch (error) {\n      console.error('Error fetching points table:', error);\n    }\n  };\n  const fetchPlayoffStage = async () => {\n    try {\n      const res = await fetch(`http://localhost:5000/api/tournament/${id}/playoff-stage`);\n      const data = await res.json();\n      setPlayoffStage(data.stage);\n    } catch (error) {\n      console.error('Error fetching playoff stage:', error);\n    }\n  };\n  const deleteMatch = async matchId => {\n    try {\n      await fetch(`http://localhost:5000/api/matches/${matchId}`, {\n        method: 'DELETE'\n      });\n      fetchMatches();\n    } catch (error) {\n      console.error('Error deleting match:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [tournament === null || tournament === void 0 ? void 0 : tournament.name, \" (\", tournament === null || tournament === void 0 ? void 0 : tournament.type, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Scheduled Matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), matches.length > 0 ? matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [match.home_team, \" vs \", match.away_team]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", new Date(match.time).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", match.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), match.status === 'scheduled' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/live-match/${match.id}`),\n          className: \"start-btn\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMatch(match.id),\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }, this), match.status === 'completed' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"match-result\",\n        children: [\"\\uD83C\\uDFC6 Winner: \", match.winner, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 55\n        }, this), \"Score: \", match.home_team, \" = \", match.scoreA, \" ---- \", match.away_team, \" = \", match.scoreB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No scheduled matches available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playoffs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"playoff-btn\",\n      onClick: () => navigate(`/playoffs/${id}`),\n      children: playoffStage === 0 ? \"Proceed to Playoffs\" : playoffStage === 1 ? \"Schedule Semifinal-2\" : \"Schedule Final\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), playoffMatches.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Semifinal-1\", \"Semifinal-2\", \"Final\"].map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: round\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-container\",\n          children: playoffMatches.filter(match => match.round === round).map((match, index) => {\n            console.log(\"Raw date:\", match.match_datetime); // Debugging\n\n            let formattedDate = \"Invalid Date\";\n            if (match.match_datetime) {\n              let parsedDate = new Date(match.match_datetime.replace(\" \", \"T\")); // Fix for incorrect date format\n              if (!isNaN(parsedDate.getTime())) {\n                // Check if date is valid\n                formattedDate = parsedDate.toLocaleString();\n              }\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [match.home_team, \" vs \", match.away_team]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Date: \", formattedDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", match.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), match.status === 'scheduled' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => navigate(`/live-match/${match.id}`),\n                  className: \"start-btn\",\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteMatch(match.id),\n                  className: \"delete-btn\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this), match.status === 'completed' && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"match-result\",\n                children: [\"\\uD83C\\uDFC6 Winner: \", match.winner, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 71\n                }, this), \"Score: \", match.home_team, \" = \", match.scoreA, \" ---- \", match.away_team, \" = \", match.scoreB]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this)]\n      }, round, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No playoff matches scheduled yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Points Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Played\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Losses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pointsTable.length > 0 ? pointsTable.map((team, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.team_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.games_played\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.wins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.losses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: team.wins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No points data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewTournament, \"cbeVhuJCPI/eC0EpvCeH4LgwaYA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ViewTournament;\nexport default ViewTournament;\nvar _c;\n$RefreshReg$(_c, \"ViewTournament\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","ViewTournament","_s","id","navigate","tournament","setTournament","matches","setMatches","playoffMatches","setPlayoffMatches","pointsTable","setPointsTable","playoffStage","setPlayoffStage","allMatchesCompleted","setAllMatchesCompleted","fetchData","fetchTournamentDetails","fetchMatches","fetchPointsTable","fetchPlayoffStage","length","allNormalCompleted","every","match","status","console","log","res","fetch","data","json","error","fetchPlayoffMatches","response","ok","Error","Array","isArray","normalMatches","filter","round","includes","semifinal1Matches","semifinal2Match","find","finalMatch","structuredPlayoffMatches","Boolean","sortedData","sort","a","b","points","point_difference","stage","deleteMatch","matchId","method","className","children","name","type","fileName","_jsxFileName","lineNumber","columnNumber","map","index","home_team","away_team","Date","time","toLocaleString","onClick","winner","scoreA","scoreB","match_datetime","formattedDate","parsedDate","replace","isNaN","getTime","border","team","team_name","games_played","wins","losses","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/sindh/Desktop/basketball-tournament-app/frontend/src/components/ViewTournament.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport \"../styles/ViewTournament.css\";\r\n\r\nfunction ViewTournament() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [tournament, setTournament] = useState(null);\r\n    const [matches, setMatches] = useState([]);\r\n    const [playoffMatches, setPlayoffMatches] = useState([]);\r\n    const [pointsTable, setPointsTable] = useState([]);\r\n    const [playoffStage, setPlayoffStage] = useState(0);\r\n    const [allMatchesCompleted, setAllMatchesCompleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await fetchTournamentDetails();\r\n            await fetchMatches();\r\n            await fetchPointsTable();\r\n            await fetchPlayoffStage();\r\n        }\r\n        fetchData();\r\n    }, [id]);\r\n    useEffect(() => {\r\n        if (matches.length > 0) {\r\n            const allNormalCompleted = matches.every(match => match.status === \"completed\");\r\n            setAllMatchesCompleted(allNormalCompleted);\r\n        }\r\n    }, [matches]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Updated All Matches Completed:\", allMatchesCompleted);\r\n    }, [allMatchesCompleted]);\r\n\r\n    const fetchTournamentDetails = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/tournament/${id}`);\r\n            const data = await res.json();\r\n            if (data?.id) {\r\n                setTournament(data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching tournament details:', error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        async function fetchPlayoffMatches() {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/tournament/${id}/playoff-matches`);\r\n                if (!response.ok) throw new Error(\"Failed to fetch playoff matches\");\r\n\r\n                const data = await response.json();\r\n                setPlayoffMatches(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching playoff matches:\", error);\r\n            }\r\n        }\r\n\r\n        fetchPlayoffMatches();\r\n    }, [id]);\r\n    const fetchMatches = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/tournament/${id}/matches`);\r\n            const data = await res.json();\r\n            if (!Array.isArray(data)) return;\r\n    \r\n            // 🏀 Separate Normal Matches & Playoffs\r\n            const normalMatches = data.filter(match => \r\n                !match.round.includes(\"Semifinal\") && !match.round.includes(\"Final\")\r\n            );\r\n    \r\n            let playoffMatches = data.filter(match => \r\n                match.round.includes(\"Semifinal\") || match.round.includes(\"Final\")\r\n            );\r\n    \r\n            // 🏀 Ensure Correct Semifinal-1 (2 Matches) & Semifinal-2 (1 Match)\r\n            let semifinal1Matches = playoffMatches.filter(match => match.round === \"Semifinal-1\");\r\n            let semifinal2Match = playoffMatches.find(match => match.round === \"Semifinal-2\");\r\n            let finalMatch = playoffMatches.find(match => match.round.includes(\"Final\")) || null;\r\n\r\n            const structuredPlayoffMatches = [...semifinal1Matches, semifinal2Match, finalMatch].filter(Boolean);\r\n\r\n            setMatches(normalMatches);\r\n            setPlayoffMatches(structuredPlayoffMatches);\r\n    \r\n            // ✅ Check if all normal matches are completed\r\n            const allNormalCompleted = normalMatches.length > 0 && normalMatches.every(match => match.status === \"completed\");\r\n            setAllMatchesCompleted(allNormalCompleted);\r\n\r\n            // ✅ Determine Playoff Stage\r\n            if (finalMatch && finalMatch.status === \"completed\") {\r\n                setPlayoffStage(3); // Playoffs completed\r\n            } else if (semifinal1Matches.length === 2 && semifinal1Matches.every(match => match.status === \"completed\") \r\n                && semifinal2Match && semifinal2Match.status === \"completed\") {\r\n                setPlayoffStage(2); // Ready for Final\r\n            } else if (semifinal1Matches.length === 2 && semifinal1Matches.every(match => match.status === \"completed\")) {\r\n                setPlayoffStage(1); // Ready for Semifinal-2\r\n            } else {\r\n                setPlayoffStage(0); // Start with Semifinal-1\r\n            }\r\n            fetchPointsTable();\r\n        } catch (error) {\r\n            console.error('Error fetching matches:', error);\r\n        }\r\n    };\r\n\r\n    const fetchPointsTable = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/tournament/${id}/points-table`);\r\n            const data = await res.json();\r\n            if (Array.isArray(data) && data.length > 0) {\r\n                const sortedData = data.sort((a, b) => b.points - a.points || b.point_difference - a.point_difference);\r\n                setPointsTable(sortedData);\r\n            } else {\r\n                setPointsTable([]); // Ensure an empty array if no data\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching points table:', error);\r\n        }\r\n    };\r\n\r\n    const fetchPlayoffStage = async () => {\r\n        try {\r\n            const res = await fetch(`http://localhost:5000/api/tournament/${id}/playoff-stage`);\r\n            const data = await res.json();\r\n            setPlayoffStage(data.stage);\r\n        } catch (error) {\r\n            console.error('Error fetching playoff stage:', error);\r\n        }\r\n    };\r\n\r\n    const deleteMatch = async (matchId) => {\r\n        try {\r\n            await fetch(`http://localhost:5000/api/matches/${matchId}`, { method: 'DELETE' });\r\n            fetchMatches();\r\n        } catch (error) {\r\n            console.error('Error deleting match:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container1\">\r\n            <h2>{tournament?.name} ({tournament?.type})</h2>\r\n\r\n            <h3>Scheduled Matches</h3>\r\n            {matches.length > 0 ? matches.map((match, index) => (\r\n                <div key={index} className=\"match-card\">\r\n                    <h3>{match.home_team} vs {match.away_team}</h3>\r\n                    <p>Date: {new Date(match.time).toLocaleString()}</p>\r\n                    <p>Status: {match.status}</p>\r\n                    {match.status === 'scheduled' && (\r\n                        <div className='buttons'>\r\n                            <button onClick={() => navigate(`/live-match/${match.id}`)} className=\"start-btn\">Start</button>\r\n                            <button onClick={() => deleteMatch(match.id)} className=\"delete-btn\">Delete</button>\r\n                        </div>\r\n                    )}\r\n                    {match.status === 'completed' && (\r\n                        <p className='match-result'>\r\n                            🏆 Winner: {match.winner} <br />\r\n                            Score: {match.home_team} = {match.scoreA} ---- {match.away_team} = {match.scoreB}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            )) : <p>No scheduled matches available.</p>}\r\n\r\n            <h2>Playoffs</h2>\r\n            <button \r\n    className=\"playoff-btn\" \r\n    onClick={() => navigate(`/playoffs/${id}`)}\r\n>\r\n    {playoffStage === 0 ? \"Proceed to Playoffs\" :\r\n     playoffStage === 1 ? \"Schedule Semifinal-2\" :\r\n     \"Schedule Final\"}\r\n</button>\r\n{playoffMatches.length > 0 ? (\r\n    <div>\r\n        {[\"Semifinal-1\", \"Semifinal-2\", \"Final\"].map((round) => (\r\n            <div key={round}>\r\n                <h4>{round}</h4>\r\n                <div className=\"match-container\">\r\n                    {playoffMatches\r\n                        .filter((match) => match.round === round)\r\n                        .map((match, index) => {\r\n                            console.log(\"Raw date:\", match.match_datetime); // Debugging\r\n\r\n                            let formattedDate = \"Invalid Date\";\r\n                            if (match.match_datetime) {\r\n                                let parsedDate = new Date(match.match_datetime.replace(\" \", \"T\")); // Fix for incorrect date format\r\n                                if (!isNaN(parsedDate.getTime())) {  // Check if date is valid\r\n                                    formattedDate = parsedDate.toLocaleString();\r\n                                }\r\n                            }\r\n\r\n                            return (\r\n                                <div key={index} className=\"match-card\">\r\n                                    <h3>{match.home_team} vs {match.away_team}</h3>\r\n                                    <p>Date: {formattedDate}</p>\r\n                                    <p>Status: {match.status}</p>\r\n\r\n                                    {match.status === 'scheduled' && (\r\n                                        <div className='buttons'>\r\n                                            <button onClick={() => navigate(`/live-match/${match.id}`)} className=\"start-btn\">Start</button>\r\n                                            <button onClick={() => deleteMatch(match.id)} className=\"delete-btn\">Delete</button>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {match.status === 'completed' && (\r\n                                        <p className='match-result'>\r\n                                            🏆 Winner: {match.winner} <br />\r\n                                            Score: {match.home_team} = {match.scoreA} ---- {match.away_team} = {match.scoreB}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </div>\r\n) : (\r\n    <p>No playoff matches scheduled yet.</p>\r\n)}\r\n\r\n\r\n            <h3>Points Table</h3>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Team</th>\r\n                        <th>Played</th>\r\n                        <th>Wins</th>\r\n                        <th>Losses</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n    {pointsTable.length > 0 ? (\r\n        pointsTable.map((team, index) => (\r\n            <tr key={index}>\r\n                <td>{team.team_name}</td>\r\n                <td>{team.games_played}</td>\r\n                <td>{team.wins}</td>\r\n                <td>{team.losses}</td>\r\n                <td>{team.wins}</td>\r\n            </tr>\r\n        ))\r\n    ) : (\r\n        <tr>\r\n            <td colSpan=\"5\">No points data available</td>\r\n        </tr>\r\n    )}\r\n</tbody>\r\n\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewTournament;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}