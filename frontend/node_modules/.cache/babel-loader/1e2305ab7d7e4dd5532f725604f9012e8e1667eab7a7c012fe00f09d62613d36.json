{"ast":null,"code":"const handleScheduleSubmit = async () => {\n  console.log(\"Tournament ID:\", tournamentId);\n  console.log(\"Scheduling Matches with:\", {\n    matchFormat,\n    rounds,\n    matchesPerDay,\n    matchDate,\n    matchTime\n  });\n  if (!tournamentId || teams.length === 0) {\n    alert(\"Tournament ID is missing or no teams available!\");\n    return;\n  }\n  if (!matchDate) {\n    alert(\"Please select a match start date.\");\n    return;\n  }\n  try {\n    const response = await fetch(`http://localhost:5000/api/tournaments/${tournamentId}/schedule`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        matchFormat,\n        rounds,\n        matchesPerDay,\n        matchDate,\n        matchTime\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      console.log(\"Response from server:\", data.matches);\n      setScheduledMatches(data.matches);\n      alert(\"Schedule created successfully!\");\n    } else {\n      console.error(\"Error from server:\", data);\n      alert(`Failed to create schedule: ${data.detail || data.error || \"Unknown error\"}`);\n    }\n  } catch (error) {\n    console.error(\"Fetch Error:\", error);\n    alert(\"An unexpected error occurred while scheduling matches.\");\n  }\n};","map":{"version":3,"names":["handleScheduleSubmit","console","log","tournamentId","matchFormat","rounds","matchesPerDay","matchDate","matchTime","teams","length","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","matches","setScheduledMatches","error","detail"],"sources":["C:/Users/sindh/Desktop/basketball-tournament-app/frontend/src/components/ScheduleMatch.js"],"sourcesContent":["const handleScheduleSubmit = async () => {\r\n  console.log(\"Tournament ID:\", tournamentId);\r\n  console.log(\"Scheduling Matches with:\", { matchFormat, rounds, matchesPerDay, matchDate, matchTime });\r\n\r\n  if (!tournamentId || teams.length === 0) {\r\n    alert(\"Tournament ID is missing or no teams available!\");\r\n    return;\r\n  }\r\n\r\n  if (!matchDate) {\r\n    alert(\"Please select a match start date.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/tournaments/${tournamentId}/schedule`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ matchFormat, rounds, matchesPerDay, matchDate, matchTime }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      console.log(\"Response from server:\", data.matches);\r\n      setScheduledMatches(data.matches);\r\n      alert(\"Schedule created successfully!\");\r\n    } else {\r\n      console.error(\"Error from server:\", data);\r\n      alert(`Failed to create schedule: ${data.detail || data.error || \"Unknown error\"}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Fetch Error:\", error);\r\n    alert(\"An unexpected error occurred while scheduling matches.\");\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EACvCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;EAC3CF,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE;IAAEE,WAAW;IAAEC,MAAM;IAAEC,aAAa;IAAEC,SAAS;IAAEC;EAAU,CAAC,CAAC;EAErG,IAAI,CAACL,YAAY,IAAIM,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACvCC,KAAK,CAAC,iDAAiD,CAAC;IACxD;EACF;EAEA,IAAI,CAACJ,SAAS,EAAE;IACdI,KAAK,CAAC,mCAAmC,CAAC;IAC1C;EACF;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCV,YAAY,WAAW,EAAE;MAC7FW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,WAAW;QAAEC,MAAM;QAAEC,aAAa;QAAEC,SAAS;QAAEC;MAAU,CAAC;IACnF,CAAC,CAAC;IAEF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfpB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEiB,IAAI,CAACG,OAAO,CAAC;MAClDC,mBAAmB,CAACJ,IAAI,CAACG,OAAO,CAAC;MACjCX,KAAK,CAAC,gCAAgC,CAAC;IACzC,CAAC,MAAM;MACLV,OAAO,CAACuB,KAAK,CAAC,oBAAoB,EAAEL,IAAI,CAAC;MACzCR,KAAK,CAAC,8BAA8BQ,IAAI,CAACM,MAAM,IAAIN,IAAI,CAACK,KAAK,IAAI,eAAe,EAAE,CAAC;IACrF;EACF,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdvB,OAAO,CAACuB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpCb,KAAK,CAAC,wDAAwD,CAAC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}